public class mindistance {
        static class node
        {
            int data;
            node left;
            node right;
    
            public node(int data)
            {
                this.data=data;
                this.left=null;
                this.right=null;
            }
        }
        public static node lca(node root,int n1,int n2)
        {
            if(root==null||root.data==n1||root.data==n2)
            {
                return root;
            }
            node leftlca=lca(root.left,n1,n2);
            node rightlca=lca(root.right,n1,n2);
    
            if(rightlca==null)
            {
                return leftlca;
            }
            if(leftlca==null)
            {
                return rightlca;
            }
            return root;
        }
        public static int lcadist(node root,int n)
        {
            if(root==null)
            {
                return -1;
            }
            if(root.data==n)
            {
                return 0;
            }
            int leftdist=lcadist(root.left,n);
            int rightdist=lcadist(root.right,n);
            if(leftdist==-1&&rightdist==-1)
            {
                return -1;
            }
            else if(leftdist==-1)
            {
                return rightdist+1;
            }
            else{
                return leftdist+1;

            }

        }
        public static int mindist(node root,int n1,int n2)
        {
            node lca2=lca(root,n1,n2);
            int dist1=lcadist(lca2,n1);
            int dist2=lcadist(lca2,n2);
            return dist1+dist2;
        }
        public static void main(String[] args) {
            node root=new node(1);
            root.left=new node(2);
            root.right=new node(3);
            root.left.left=new node(4);
            root.left.right=new node(5);
            root.right.right=new node(6);
            int n1=4;
            int n2=6;
            System.out.println(mindist(root,n1,n2));
            
        }
        
    }
