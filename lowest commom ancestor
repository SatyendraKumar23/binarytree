//lowest common ancestor
public class lowestca {
    static class node
    {
        int data;
        node left;
        node right;

        public node(int data)
        {
            this.data=data;
            this.left=null;
            this.right=null;
        }
    }
    public static node lca(node root,int n1,int n2)
    {
        if(root==null||root.data==n1||root.data==n2)
        {
            return root;
        }
        node leftlca=lca(root.left,n1,n2);
        node rightlca=lca(root.right,n1,n2);

        if(rightlca==null)
        {
            return leftlca;
        }
        if(leftlca==null)
        {
            return rightlca;
        }
        return root;
    }
    public static void main(String[] args) {
        node root=new node(1);
        root.left=new node(2);
        root.right=new node(3);
        root.left.left=new node(4);
        root.left.right=new node(5);
        root.right.right=new node(6);
        int n1=4;
        int n2=6;
        System.out.println(lca(root,n1,n2).data);
        
    }
    
